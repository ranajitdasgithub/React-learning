{"mappings":"AAaA,IAAI,SAAS,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IACxD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAW,GAAG;QAC7C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAY,GAAG;QAC9C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,IAAI,UAAU,MAAM,aAAa,CAC/B,MACA;IAAE,OAAO;IAAW,IAAI;AAAS,GACjC;AAEF,gFAAgF;AAChF,+GAA+G;AAE/G,IAAI,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AAUvD,KAAK,MAAM,CAAC","sources":["index.js"],"sourcesContent":["{\n  /* <div id='parent'>\n      <div id='children'>\n          <h1>I'm h1 tag</h1>\n          <h2>I'm h2 tag</h2>\n      </div>\n      <div id='children2'>\n          <h1>I'm h1 tag</h1>\n          <h2>I'm h2 tag</h2>\n      </div>\n  </div> */\n}\n\nlet parent = React.createElement(\"div\", { id: \"parent\" }, [\n  React.createElement(\"div\", { id: \"children\" }, [\n    React.createElement(\"h1\", {}, \"I'm h1 tag\"),\n    React.createElement(\"h2\", {}, \"I'm h2 tag\"),\n  ]),\n  React.createElement(\"div\", { id: \"children2\" }, [\n    React.createElement(\"h1\", {}, \"I'm h1 tag\"),\n    React.createElement(\"h2\", {}, \"I'm h2 tag\"),\n  ]),\n]);\n\nlet heading = React.createElement(\n  \"h1\",\n  { class: \"heading\", id: \"header\" },\n  \"Hello World from React\"\n);\n// console.log(heading) // It will be a react element object, not a html element\n//React.createElemnt('tag',{attribute in obj},children) //for multiple children pass it as an array of children\n\nlet root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n//If there is someting in the root element parent will be replaced not will append\n//After render this h1 tag will be no more in the root element\n{\n  /* <root>\n    <h1>First I'm present here</h1>\n</root> */\n}\n\nroot.render(parent);\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}